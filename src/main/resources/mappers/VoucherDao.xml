<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whayer.wx.vouchers.dao.VoucherDao">
	<!-- 一对一关系 -->
	<sql id="voucherFields">
		id,
		user_id,
		create_user_id,
		amount,
		is_effect, <!-- 是否已使用 -->
		is_expired,
		create_date,
		use_date,
		deadline
	</sql>
	
	<resultMap id="voucherListMap" type="Voucher">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="create_user_id" property="createUserId" />
        <result column="amount" property="amount" />
        <result column="is_effect" property="isEffect" />
        <result column="is_expired" property="isExpired" />
        <result column="create_date" property="createDate" />
        <result column="use_date" property="useDate" />
        <result column="deadline" property="deadline" />
        
        <result property="user.id" column="u_id" />
	    <result property="user.pId" column="u_p_id" />
	    <result property="user.username" column="u_username" />
	    <result property="user.mobile" column="u_mobile" />
	    <result property="user.nickName" column="u_nick_name" />
    </resultMap>

	<select id="getVoucherListByUid" parameterType="String" resultMap="voucherListMap" >
        select 
        s.id,
		s.user_id,
		s.create_user_id,
		s.amount,
		s.is_effect,
		s.is_expired,
		s.create_date,
		s.use_date,
		s.deadline,
		
		u.id as u_id,
		u.p_id as u_p_id,
		u.username as u_username,
		u.mobile as u_mobile,
		u.nick_name as u_nick_name
		
        from sk_voucher s
        left join sk_user u on s.user_id = u.id
        <!-- where user_id = #{userId} --> 
        <trim prefix="WHERE" prefixOverrides="AND|OR">  
		    <choose>  
	            <when test="userId != null and userId !=''">  
	                s.user_id = #{userId} ORDER BY s.deadline ASC 
	            </when >
	            <otherwise> 
	            	1=1  ORDER BY s.deadline ASC
	            </otherwise>  
	        </choose>  
		</trim>
    </select>
    
    <select id="getVoucherById"  parameterType="String" resultMap="voucherListMap">
   		select 
        s.id,
		s.user_id,
		s.create_user_id,
		s.amount,
		s.is_effect,
		s.is_expired,
		s.create_date,
		s.use_date,
		s.deadline,
		
		u.id as u_id,
		u.p_id as u_p_id,
		u.username as u_username,
		u.mobile as u_mobile,
		u.nick_name as u_nick_name

		from sk_voucher s
		left join sk_user u on s.user_id = u.id
		where s.id=#{id}
    </select>
    
    <insert id="saveVoucher" parameterType="Voucher">
    	<![CDATA[
    		INSERT INTO sk_voucher(
				id,
				user_id,
				create_user_id,
				amount,
				is_effect,
				is_expired,
				create_date,
				deadline
				)
			VALUES(
				#{id},
				#{userId},
				#{createUserId},
				#{amount},
				1,
				0,
				now(),
				#{deadline}
			)
    	]]>
    </insert>
    
    <delete id="deleteVoucherById" parameterType="String">
   		<![CDATA[
   			DELETE FROM sk_voucher WHERE id=#{id}
   		]]>
    </delete>
    
    <select id="validate" resultType="Voucher">
    	SELECT 
		<include refid="voucherFields" />
    	FROM sk_voucher 
    	WHERE 1=1
    	<if test="userId != null and userId != ''"> 
    		AND user_id = #{userId}
    	</if> 
    	<if test="code != null and code != ''"> 
    		AND id = #{code}
    	</if> 
    </select>
    
    <!-- 验证有效性与用户 -->
    <select id="validate_old" resultType="Voucher">
    	SELECT 
		<include refid="voucherFields" />
    	FROM sk_voucher t
    	<trim prefix="WHERE" prefixOverrides="AND|OR">
    		<if test="code != null and code != ''"> t.id=#{code} </if>
	　　　　  <if test="userId != null and userId != ''"> AND t.user_id=#{userId} </if>
			<if test="1==1"> AND t.is_effect = 1 </if>
			<if test="1==1"> AND t.is_expired = 0 </if>
		</trim>
    </select>
    
    
    <update id="updateStateByIds">
    	 UPDATE sk_voucher SET is_effect = 0, use_date = NOW() WHERE id IN
	    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </update>
    
    <update id="updateStateRollBackById">
    	UPDATE sk_voucher SET is_effect = 1, use_date = null WHERE id IN
	    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </update>
    
    <update id="updateExpired">
    	UPDATE sk_voucher SET is_expired = 1
    	WHERE id = #{id}
    </update>
    
    <update id="updateVoucher" parameterType="Voucher">
    	UPDATE sk_voucher
		    <trim prefix="SET" suffixOverrides=",">
			    <if test="userId != null and userId != ''">
			      user_id = #{userId},
			    </if>
			    <if test="amount != null">
			      amount = #{amount},
			    </if>
			    <if test="deadline != null">
			      deadline = #{deadline},
			    </if>
		    </trim>
			<where>
		      id=#{id}
		    </where>
    </update>
</mapper>
