<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.whayer.wx.login.dao.UserDao">

	<sql id="userFields">
		id,
		username,
		password,
		p_id,
		points,
		photo,
		is_audit,
		is_agent,
		mobile,
		user_type,
		nick_name
	</sql>

	<!-- 根据用户名查询用户 -->
	<select id="findUserByName" parameterType="String" resultType="SkUser">
		select
		<include refid="userFields" />
		from sk_user
		where username=#{username}
	</select>

	<!-- 根据用户名/密码查询用户 -->
	<select id="findUser" parameterType="SkUser" resultType="SkUser">
		select
		<include refid="userFields" />
		from sk_user
		where 1=1
		<if test="id >''">
			and id = #{id}
		</if>
		<if test="username >''">
			and username = #{username}
		</if>
		<if test="mobile > ''">
			and mobile = #{mobile}
		</if>
	</select>
	
	<update id="updateUserById" parameterType="SkUser">
		
			UPDATE sk_user 
		    <trim prefix="SET" suffixOverrides=",">
			    <if test="username != null and username != ''">
			      username = #{username},
			    </if>
			    <if test="password != null and password != ''">
			      password = #{password},
			    </if>
			    <if test="pId != null and pId != ''">
			      p_id = #{pId},
			    </if>
			    <if test="points != null">
			      points = #{points},
			    </if>
			    <if test="photo != null">
			      photo = #{photo},
			    </if>
			    <if test="isAudit != null">
			      is_audit = #{isAudit},
			    </if>
			    <if test="isAgent != null">
			      is_agent = #{isAgent},
			    </if>
			    <if test="mobile != null and mobile != ''">
			      mobile = #{mobile},
			    </if>
			    <if test="userType != null">
			      user_type = #{userType},
			    </if>
			    <if test="nickName != null and nickName != ''">
			      nick_name = #{nickName},
			    </if>
		    </trim>
			<where>
		      id=#{id}
		    </where>
	</update>
  
  	<select id="isUserNameExist" parameterType="String" resultType="SkUser">
		select 
		<include refid="userFields" />
		from sk_user
		where username=#{username}
		limit 1
  	</select>
  	
  	<select id="isMobileExist" parameterType="String" resultType="SkUser">
		select 
		<include refid="userFields" />
		from sk_user
		where mobile=#{mobile}
		limit 1
  	</select>
  	
  	<!-- 注册代理用户 -->
  	<insert id="saveUser" parameterType="SkUser">
  		insert into sk_user(
  			<include refid="userFields" />
  		) 
  		values(
  		#{id},
  		#{username},
  		#{password},
  		#{pId},
  		0,
  		#{photo},
  		0,
  		0,
  		#{mobile},
  		#{userType} <!-- 默认只有代理用户(个代/区代)才会进行注册 -->
  		)
  	</insert>
  	
  	<resultMap id="userMap" type="SkUser">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="p_id" property="pId" />
        <result column="points" property="points" />
        <result column="photo" property="photo" />
        <result column="is_audit" property="isAudit" />
        <result column="is_agent" property="isAgent" />
        <result column="mobile" property="mobile" />
        <result column="user_type" property="userType" />
        <result column="nick_name" property="nickName" />
    </resultMap>
    
  	<select id="getUserListByType" parameterType="Integer" resultType="SkUser">
        select 
        <include refid="userFields" /> 
        from sk_user
        <where>
        	<if test="type != null">  
	            is_agent = #{type}  
	        </if>  
        </where>
  	</select>
  	
  	<!-- 批量审核注册用户 -->
  	<update id="approveAuditBatch" parameterType="Map">   
        UPDATE sk_user SET is_audit=1
    	<where>
	      	id IN
	      	<!-- 可以使用#{param1} #{param2} 方式来赋值-->
		    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
		        #{id}
		    </foreach>
    	</where>  
	</update>  
	
	<!-- 批量审核区域代理 -->
	<update id="approveAgentBatch">
		UPDATE sk_user SET is_agent=1
    	<where>
	      	id IN
	      	<!-- 可以使用#{param1} #{param2} 方式来赋值-->
		    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
		        #{id}
		    </foreach>
    	</where>  
	</update>
</mapper>
