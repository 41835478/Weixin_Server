<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.whayer.wx.login.dao.UserDao">

	<sql id="userFields">
		id,
		username,
		password,
		p_id,
		points,
		photo,
		is_audit,
		is_agent,
		mobile,
		user_type,
		nick_name,
		head_img,
		
		email,
		id_card_no,
		bank,
		bank_card_no,
		id_card_img,
		bank_card_name,
		address
	</sql>

	<!-- 根据用户名查询用户 -->
	<select id="findUserByName" parameterType="String" resultType="User">
		select
		<include refid="userFields" />
		from sk_user
		where username=#{username}
	</select>

	<!-- 根据用户名/密码查询用户 -->
	<select id="findUser" parameterType="User" resultType="User">
		select
		<include refid="userFields" />
		from sk_user
		<trim prefix="WHERE" prefixOverrides="AND|OR">
    		<if test="id != null and id != ''">
			    id = #{id}
			</if>
			<if test="username != null and username != ''">
				or username = #{username}
			</if>
			<if test="mobile != null and mobile != ''">
				or mobile = #{mobile}
			</if>
		</trim>
		limit 1
	</select>
	
	<!-- 根据用户名/密码查询用户 -->
	<select id="findUserByPid" parameterType="String" resultType="User">
		select
		<include refid="userFields" />
		from sk_user
		<trim prefix="WHERE" prefixOverrides="AND|OR">
    		<if test="pid != null and pid != ''">
			    id = #{pid} OR username = #{pid} OR mobile = #{pid}
			</if>
		</trim>
		limit 1
	</select>
	
	<update id="updateUserById" parameterType="User">
		
			UPDATE sk_user 
		    <trim prefix="SET" suffixOverrides=",">
			    <if test="username != null and username != ''">
			      username = #{username},
			    </if>
			    <if test="password != null and password != ''">
			      password = #{password},
			    </if>
			    <if test="pId != null and pId != ''">
			      p_id = #{pId},
			    </if>
			    <if test="points != null">
			      points = #{points},
			    </if>
			    <if test="photo != null">
			      photo = #{photo},
			    </if>
			    <if test="isAudit != null">
			      is_audit = #{isAudit},
			    </if>
			    <if test="isAgent != null">
			      is_agent = #{isAgent},
			    </if>
			    <if test="mobile != null and mobile != ''">
			      mobile = #{mobile},
			    </if>
			    <if test="userType != null">
			      user_type = #{userType},
			    </if>
			    <if test="nickName != null and nickName != ''">
			      nick_name = #{nickName},
			    </if>
			    <if test="headImg != null and headImg != ''">
			      head_img = #{headImg},
			    </if>
			    <if test="email != null and email != ''">
			      email = #{email},
			    </if>
			    <if test="idCardNo != null and idCardNo != ''">
			      id_card_no = #{idCardNo},
			    </if>
			    <if test="bank != null and bank != ''">
			      bank = #{bank},
			    </if>
			    <if test="bankCardNo != null and bankCardNo != ''">
			      bank_card_no = #{bankCardNo},
			    </if>
			    <if test="idCardImg != null and idCardImg != ''">
			      id_card_img = #{idCardImg},
			    </if>
			    <if test="bankCardName != null and bankCardName != ''">
			      bank_card_name = #{bankCardName},
			    </if>
			    <if test="address != null and address != ''">
			      address = #{address},
			    </if>
		    </trim>
			<where>
		      id=#{id}
		    </where>
	</update>
  
  	<select id="isUserNameExist" parameterType="String" resultType="User">
		select 
		<include refid="userFields" />
		from sk_user
		where username=#{username}
		limit 1
  	</select>
  	
  	<select id="isMobileExist" parameterType="String" resultType="User">
		select 
		<include refid="userFields" />
		from sk_user
		where mobile=#{mobile}
		limit 1
  	</select>
  	
  	<!-- 注册代理用户 -->
  	<insert id="saveUser" parameterType="User">
  		insert into sk_user(
  			<include refid="userFields" />
  		) 
  		values(
  		#{id},
  		#{username},
  		#{password},
  		#{pId},
  		0,
  		#{photo},
  		0,
  		0,
  		#{mobile},
  		#{userType}, <!-- 默认只有代理用户(个代/区代)才会进行注册 -->
  		#{nickName},
  		#{headImg},
  		#{email},
  		#{idCardNo},
  		#{bank},
  		#{bankCardNo},
  		#{idCardImg},
  		#{bankCardName},
  		#{address}
  		)
  	</insert>
  	
  	<resultMap id="userMap" type="User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="p_id" property="pId" />
        <result column="points" property="points" />
        <result column="photo" property="photo" />
        <result column="is_audit" property="isAudit" />
        <result column="is_agent" property="isAgent" />
        <result column="mobile" property="mobile" />
        <result column="user_type" property="userType" />
        <result column="nick_name" property="nickName" />
        <result column="head_img" property="headImg" />
        
        <result column="email" property="email" />
        <result column="id_card_no" property="idCardNo" />
        <result column="bank" property="bank" />
        <result column="bank_card_no" property="bankCardNo" />
        <result column="id_card_img" property="idCardImg" />
        <result column="bank_card_name" property="bankCardName" />
        <result column="address" property="address" />
    </resultMap>
    
  	<select id="getUserListByType" resultType="User">
        select 
        <include refid="userFields" /> 
        from sk_user
        <trim prefix="WHERE" prefixOverrides="AND|OR">  
		    <if test="isAuditType != null">  
		        AND is_audit = #{isAuditType} 
		    </if>  
		    <if test="nickName != null and nickName !='' ">  
		        AND nick_name LIKE CONCAT('%',#{nickName},'%')  
		    </if> 
		</trim>	
  	</select>
  	
  	<!-- 批量审核注册用户 -->
  	<update id="approveAuditBatch" parameterType="Map">   
        UPDATE sk_user SET is_audit=1
    	<where>
	      	id IN
	      	<!-- 可以使用#{param1} #{param2} 方式来赋值-->
		    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
		        #{id}
		    </foreach>
    	</where>  
	</update>  
	
	<!-- 批量审核区域代理 -->
	<update id="approveAgentBatch">
		UPDATE sk_user SET is_agent=1
    	<where>
	      	id IN
	      	<!-- 可以使用#{param1} #{param2} 方式来赋值-->
		    <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
		        #{id}
		    </foreach>
    	</where>  
	</update>
	
	<!-- 代理商获取下线 -->
	<select id="getTeams" parameterType="String" resultType="User">
		SELECT 
        <include refid="userFields" /> 
        FROM sk_user
        WHERE p_id=#{userId}
	</select>
	
	<!-- 验证父级代理商是否存在 >0 存在 ==0 不存在 -->
	<select id="validatePid" parameterType="String" resultType="Integer">
		SELECT COUNT(*)
		FROM sk_user
		WHERE id=#{pid} OR username=#{pid} OR mobile=#{pid}
	</select>
	
	<!-- 删除代理商 -->
	<delete id="deleteUserById" parameterType="String">
		<![CDATA[
   			DELETE FROM sk_user WHERE id=#{id}
   		]]>
	</delete>
	
	<!-- 更新积分 -->
	<update id="updatePoints">
		UPDATE sk_user SET points=points+#{points}
    	<where>
	      	id=#{userId}
    	</where>  
	</update>
</mapper>
